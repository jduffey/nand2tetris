// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux4Way.hdl

/**
 * 4-way demultiplexor:
 * {a, b, c, d} = {in, 0, 0, 0} if sel == 00
 *                {0, in, 0, 0} if sel == 01
 *                {0, 0, in, 0} if sel == 10
 *                {0, 0, 0, in} if sel == 11
 */

CHIP DMux4Way {
    IN in, sel[2];
    OUT a, b, c, d;

    PARTS:
    // Play off patterns learned from Mux --> Mux8Way16
    // First split between ab vs. cd
    // Large sel bit decides here
    DMux(in=in, sel=sel[1], a=Dmuxab, b=Dmuxcd);

    // Then use two Dmux to split e.g. a vs. d or b vs. d
    // Small sel bit decides here
    // Don't get confused! Remember a and b are also names of the outputs
    DMux(in=Dmuxab, sel=sel[0], a=a, b=b);
    DMux(in=Dmuxcd, sel=sel[0], a=c, b=d);
}